name: Build

on:
  push:
    branches:
    - 'master'
    - 'feature/**'
    - 'dev/**'

env:
  CODECOV_TOKEN: '69b7ce5f-1937-4405-a44c-6d38dcd0f94b'
  MAIN_GO_VER: '1.19'
  MAIN_HOST_OS: 'ubuntu-latest'

jobs:
  go_test_and_coverage:
    strategy:
      max-parallel: 6
      matrix:
        GO_VER: ['1.13', '1.14', '1.15', '1.16', '1.17', '1.18', '1.19', '1.20', '1.21']
        HOST_OS: ['ubuntu-latest', 'macos-latest']

    runs-on: ${{ matrix.HOST_OS }}

    steps:

    - name: Checkout Repositary
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.GO_VER }}
      id: go

    - name: Get Dependencies
      run: |
        echo GO_VER = ${{ matrix.GO_VER }}
        go get golang.org/x/tools/cmd/cover
        go get github.com/mattn/goveralls
        go mod tidy

    - name: Show Environments
      run: |
        echo repo status ======== && git status
        echo GO_VER = ${{ matrix.GO_VER }}
        echo HOST_OS = ${{ matrix.HOST_OS }}
        echo envs ======== && printenv

    - name: Test and Generate Coverage Report
      run: |
        go test -v -failfast -cover -covermode=atomic -coverprofile=coverage.out

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.out
        fail_ci_if_error: true
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true

    # - name: Coveralls GitHub Action
    #   uses: coverallsapp/github-action@1.1.3
    #   with:
    #     path-to-lcov: ./coverage.lcov
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
